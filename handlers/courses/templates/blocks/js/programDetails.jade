+b.courses-parts.courses-mix
  +e('h2').title Основные темы программы

  +b.tabbed-pane._01

    +e('ul').tabs
      +e('li').tab._01 Первая часть курса
      +e('li').tab._02 Вторая часть курса
      +e('li').tab._03 Третья часть курса

    +e.body._01
      +e('h2').title.phone-only Первая часть курса
      ol
        li
          strong Основной JavaScript.
          p Здесь мы изучим сам язык, его конструкции и особенности, которые позволяют "разговаривать" на JavaScript коротко, понятно, а главное - без ошибок.
          ul
            li IDE, настройка, полезные приёмы использования, средства для автопроверки кода.
            li Основные структуры данных, работа с числами, строками, датами, массивами, объектами.
            li Инструменты разработки, отладка в браузерах.
            li Автоматизированное тестирование, инструменты и их применение.
            li Современный стандарт ES-2015 (ES6), его кросс-браузерное использование сейчас.
        li
          strong Более глубокое понимание языка.
          p Чтобы писать хороший код, а также грамотно пользоваться современными фреймворками, мы изучим JavaScript лучше, включая тонкости и продвинутое применение языковых конструкций.
          ul
            li Замыкания и их грамотное применение.
            li Внутреннее устройство движка JavaScript.
            li Контекст this в деталях.
            li Форвардинг, одалживание и делегирование функций.
            li Прототипы, классы, прототипное и функциональное ООП, детали использования.

      p По окончанию первой части курса вы свободно пользуетесь языком JavaScript, с учётом его особенностей и новых возможностей стандарта ES-2015. Мы улучшим эти навыки в последующих частях курса.



    +e.body._02
      +e('h2').title.phone-only Вторая часть курса
      ol
        li
          strong Документ, генерация интерфейса.
          p Здесь мы учимся работать с документом, решать всевозможные задачи в браузере.
          ul
            li Внутреннее устройство браузера, оптимальная организация страницы со скриптами.
            li Дерево DOM, особенности разработки в современных браузерах с отмирающей, но иногда нужной поддержкой старых.
            li Динамическая генерация интерфейса - методы DOM, их грамотное использование.
        li
          strong События, взаимодействие с посетителем.
          ul
            li Основы и тонкости работы с различными событиями для решения основных интерфейсных задач.
            li Drag'n'Drop, по окну и внутри элемента
            li Паттерн "делегирование", оптимизация производительности и архитектуры, чтобы интерфейсы не тормозили.
            li Объектно-ориентированная разработка, компонентная архитектура с использованием ООП, событий и DOM.
        li
          strong AJAX
          ul
            li Общение с сервером при помощи XMLHttpRequest.
            li Использование Promise для асинхронных цепочек вызовов.

      p По окончании второй части вы можете создавать интерфейсные компоненты, но нужно больше практики.

    +e.body._03
      +e('h2').title.phone-only Третья часть курса
      ol
        li
          strong Сборка кода.
          ul
            li Node.JS как средство запуска полезных утилит.
            li Организация скриптов, стилей и других компонентов проекта на диске.
            li Шаблонизация, системы организации шаблонов и детали их работы.
            li Современные технологии Frontend-сборки, Webpack.
        li
          strong Архитектура сложных интерфейсов
          ul
            li Взаимодействие компонент через события и не только
            li Проекты с большим количеством компонент
        li
          strong Куда дальше?
          ul
            li Обзор фреймворков (AngularJS, React.js), куда двигаться дальше.

      p На практике эти части не так чтобы резко отделены друг от друга, переход между ними плавный. Продвинутые темы используют элементы предыдущих.

  script.
    var className = 'tabbed-pane', block = document.querySelector('.' + className);

    block.querySelector('.' + className + '__tabs').addEventListener('click', function(e) {
       block.className = className + ' ' + className + '_' +  e.target.className.split('_').pop();
    });



